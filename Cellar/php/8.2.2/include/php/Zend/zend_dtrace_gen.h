/*
 * Generated by dtrace(1M).
 */

#ifndef	_ZEND_DTRACE_GEN_H_BAK
#define	_ZEND_DTRACE_GEN_H_BAK

#include <unistd.h>

#ifdef	__cplusplus
extern "C" {
#endif

#define DTRACE_STABILITY "___dtrace_stability$php$v1$1_1_0_1_1_0_1_1_0_1_1_0_1_1_0"

#define DTRACE_TYPEDEFS "___dtrace_typedefs$php$v2"

#if !defined(DTRACE_PROBES_DISABLED) || !DTRACE_PROBES_DISABLED

#define	DTRACE_COMPILE_FILE_ENTRY(arg0, arg1) \
do { \
	__asm__ volatile(".reference " DTRACE_TYPEDEFS); \
	__dtrace_probe$php$compile__file__entry$v1$63686172202a$63686172202a(arg0, arg1); \
	__asm__ volatile(".reference " DTRACE_STABILITY); \
} while (0)
#define	DTRACE_COMPILE_FILE_ENTRY_ENABLED() \
	({ int _r = __dtrace_isenabled$php$compile__file__entry$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	DTRACE_COMPILE_FILE_RETURN(arg0, arg1) \
do { \
	__asm__ volatile(".reference " DTRACE_TYPEDEFS); \
	__dtrace_probe$php$compile__file__return$v1$63686172202a$63686172202a(arg0, arg1); \
	__asm__ volatile(".reference " DTRACE_STABILITY); \
} while (0)
#define	DTRACE_COMPILE_FILE_RETURN_ENABLED() \
	({ int _r = __dtrace_isenabled$php$compile__file__return$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	DTRACE_ERROR(arg0, arg1, arg2) \
do { \
	__asm__ volatile(".reference " DTRACE_TYPEDEFS); \
	__dtrace_probe$php$error$v1$63686172202a$63686172202a$696e74(arg0, arg1, arg2); \
	__asm__ volatile(".reference " DTRACE_STABILITY); \
} while (0)
#define	DTRACE_ERROR_ENABLED() \
	({ int _r = __dtrace_isenabled$php$error$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	DTRACE_EXCEPTION_CAUGHT(arg0) \
do { \
	__asm__ volatile(".reference " DTRACE_TYPEDEFS); \
	__dtrace_probe$php$exception__caught$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " DTRACE_STABILITY); \
} while (0)
#define	DTRACE_EXCEPTION_CAUGHT_ENABLED() \
	({ int _r = __dtrace_isenabled$php$exception__caught$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	DTRACE_EXCEPTION_THROWN(arg0) \
do { \
	__asm__ volatile(".reference " DTRACE_TYPEDEFS); \
	__dtrace_probe$php$exception__thrown$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " DTRACE_STABILITY); \
} while (0)
#define	DTRACE_EXCEPTION_THROWN_ENABLED() \
	({ int _r = __dtrace_isenabled$php$exception__thrown$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	DTRACE_EXECUTE_ENTRY(arg0, arg1) \
do { \
	__asm__ volatile(".reference " DTRACE_TYPEDEFS); \
	__dtrace_probe$php$execute__entry$v1$63686172202a$696e74(arg0, arg1); \
	__asm__ volatile(".reference " DTRACE_STABILITY); \
} while (0)
#define	DTRACE_EXECUTE_ENTRY_ENABLED() \
	({ int _r = __dtrace_isenabled$php$execute__entry$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	DTRACE_EXECUTE_RETURN(arg0, arg1) \
do { \
	__asm__ volatile(".reference " DTRACE_TYPEDEFS); \
	__dtrace_probe$php$execute__return$v1$63686172202a$696e74(arg0, arg1); \
	__asm__ volatile(".reference " DTRACE_STABILITY); \
} while (0)
#define	DTRACE_EXECUTE_RETURN_ENABLED() \
	({ int _r = __dtrace_isenabled$php$execute__return$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	DTRACE_FUNCTION_ENTRY(arg0, arg1, arg2, arg3, arg4) \
do { \
	__asm__ volatile(".reference " DTRACE_TYPEDEFS); \
	__dtrace_probe$php$function__entry$v1$63686172202a$63686172202a$696e74$63686172202a$63686172202a(arg0, arg1, arg2, arg3, arg4); \
	__asm__ volatile(".reference " DTRACE_STABILITY); \
} while (0)
#define	DTRACE_FUNCTION_ENTRY_ENABLED() \
	({ int _r = __dtrace_isenabled$php$function__entry$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	DTRACE_FUNCTION_RETURN(arg0, arg1, arg2, arg3, arg4) \
do { \
	__asm__ volatile(".reference " DTRACE_TYPEDEFS); \
	__dtrace_probe$php$function__return$v1$63686172202a$63686172202a$696e74$63686172202a$63686172202a(arg0, arg1, arg2, arg3, arg4); \
	__asm__ volatile(".reference " DTRACE_STABILITY); \
} while (0)
#define	DTRACE_FUNCTION_RETURN_ENABLED() \
	({ int _r = __dtrace_isenabled$php$function__return$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	DTRACE_REQUEST_SHUTDOWN(arg0, arg1, arg2) \
do { \
	__asm__ volatile(".reference " DTRACE_TYPEDEFS); \
	__dtrace_probe$php$request__shutdown$v1$63686172202a$63686172202a$63686172202a(arg0, arg1, arg2); \
	__asm__ volatile(".reference " DTRACE_STABILITY); \
} while (0)
#define	DTRACE_REQUEST_SHUTDOWN_ENABLED() \
	({ int _r = __dtrace_isenabled$php$request__shutdown$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	DTRACE_REQUEST_STARTUP(arg0, arg1, arg2) \
do { \
	__asm__ volatile(".reference " DTRACE_TYPEDEFS); \
	__dtrace_probe$php$request__startup$v1$63686172202a$63686172202a$63686172202a(arg0, arg1, arg2); \
	__asm__ volatile(".reference " DTRACE_STABILITY); \
} while (0)
#define	DTRACE_REQUEST_STARTUP_ENABLED() \
	({ int _r = __dtrace_isenabled$php$request__startup$v1(); \
		__asm__ volatile(""); \
		_r; })


extern void __dtrace_probe$php$compile__file__entry$v1$63686172202a$63686172202a(const char *, const char *);
extern int __dtrace_isenabled$php$compile__file__entry$v1(void);
extern void __dtrace_probe$php$compile__file__return$v1$63686172202a$63686172202a(const char *, const char *);
extern int __dtrace_isenabled$php$compile__file__return$v1(void);
extern void __dtrace_probe$php$error$v1$63686172202a$63686172202a$696e74(const char *, const char *, int);
extern int __dtrace_isenabled$php$error$v1(void);
extern void __dtrace_probe$php$exception__caught$v1$63686172202a(const char *);
extern int __dtrace_isenabled$php$exception__caught$v1(void);
extern void __dtrace_probe$php$exception__thrown$v1$63686172202a(const char *);
extern int __dtrace_isenabled$php$exception__thrown$v1(void);
extern void __dtrace_probe$php$execute__entry$v1$63686172202a$696e74(const char *, int);
extern int __dtrace_isenabled$php$execute__entry$v1(void);
extern void __dtrace_probe$php$execute__return$v1$63686172202a$696e74(const char *, int);
extern int __dtrace_isenabled$php$execute__return$v1(void);
extern void __dtrace_probe$php$function__entry$v1$63686172202a$63686172202a$696e74$63686172202a$63686172202a(const char *, const char *, int, const char *, const char *);
extern int __dtrace_isenabled$php$function__entry$v1(void);
extern void __dtrace_probe$php$function__return$v1$63686172202a$63686172202a$696e74$63686172202a$63686172202a(const char *, const char *, int, const char *, const char *);
extern int __dtrace_isenabled$php$function__return$v1(void);
extern void __dtrace_probe$php$request__shutdown$v1$63686172202a$63686172202a$63686172202a(const char *, const char *, const char *);
extern int __dtrace_isenabled$php$request__shutdown$v1(void);
extern void __dtrace_probe$php$request__startup$v1$63686172202a$63686172202a$63686172202a(const char *, const char *, const char *);
extern int __dtrace_isenabled$php$request__startup$v1(void);

#else

#define	DTRACE_COMPILE_FILE_ENTRY(arg0, arg1) \
do { \
	} while (0)
#define	DTRACE_COMPILE_FILE_ENTRY_ENABLED() (0)
#define	DTRACE_COMPILE_FILE_RETURN(arg0, arg1) \
do { \
	} while (0)
#define	DTRACE_COMPILE_FILE_RETURN_ENABLED() (0)
#define	DTRACE_ERROR(arg0, arg1, arg2) \
do { \
	} while (0)
#define	DTRACE_ERROR_ENABLED() (0)
#define	DTRACE_EXCEPTION_CAUGHT(arg0) \
do { \
	} while (0)
#define	DTRACE_EXCEPTION_CAUGHT_ENABLED() (0)
#define	DTRACE_EXCEPTION_THROWN(arg0) \
do { \
	} while (0)
#define	DTRACE_EXCEPTION_THROWN_ENABLED() (0)
#define	DTRACE_EXECUTE_ENTRY(arg0, arg1) \
do { \
	} while (0)
#define	DTRACE_EXECUTE_ENTRY_ENABLED() (0)
#define	DTRACE_EXECUTE_RETURN(arg0, arg1) \
do { \
	} while (0)
#define	DTRACE_EXECUTE_RETURN_ENABLED() (0)
#define	DTRACE_FUNCTION_ENTRY(arg0, arg1, arg2, arg3, arg4) \
do { \
	} while (0)
#define	DTRACE_FUNCTION_ENTRY_ENABLED() (0)
#define	DTRACE_FUNCTION_RETURN(arg0, arg1, arg2, arg3, arg4) \
do { \
	} while (0)
#define	DTRACE_FUNCTION_RETURN_ENABLED() (0)
#define	DTRACE_REQUEST_SHUTDOWN(arg0, arg1, arg2) \
do { \
	} while (0)
#define	DTRACE_REQUEST_SHUTDOWN_ENABLED() (0)
#define	DTRACE_REQUEST_STARTUP(arg0, arg1, arg2) \
do { \
	} while (0)
#define	DTRACE_REQUEST_STARTUP_ENABLED() (0)

#endif /* !defined(DTRACE_PROBES_DISABLED) || !DTRACE_PROBES_DISABLED */


#ifdef	__cplusplus
}
#endif

#endif	/* _ZEND_DTRACE_GEN_H_BAK */
